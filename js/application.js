// Generated by CoffeeScript 1.8.0
(function() {
  var BaseContainer, BaseItem, Component, ImageItem, LayoutBaseComponent, LeftLeaningLayout, OneColLayout, RightLeaningLayout, SmallGridContainer, SmallGridLayout, StringItem, TextItem, ThreeColLayout, TwoColLayout, VerticalContainer,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var builder;
    new OneColLayout;
    new TwoColLayout;
    new ThreeColLayout;
    new LeftLeaningLayout;
    new RightLeaningLayout;
    new SmallGridLayout;
    new VerticalContainer;
    new SmallGridContainer;
    new ImageItem;
    new StringItem;
    new TextItem;
    return builder = new Vue({
      el: '#wrapper',
      data: {
        layouts: [
          {
            layout: 'one-col-layout'
          }, {
            layout: 'two-col-layout'
          }, {
            layout: 'three-col-layout'
          }, {
            layout: 'left-leaning-layout'
          }, {
            layout: 'right-leaning-layout'
          }, {
            layout: 'small-grid-layout'
          }
        ]
      }
    });
  });

  Component = (function() {
    var dashnize;

    dashnize = function(str) {
      str = str.replace(/[A-Z]/g, function(char, index) {
        return (index !== 0 ? "-" : "") + char.toLowerCase();
      });
      return str = str.replace(/[0-9]+/g, function(char, index) {
        return (index !== 0 ? "-" : "") + char;
      });
    };

    function Component(config) {
      this.config = config != null ? config : {};
      this.config = $.extend(this.constructor.defaultConfig, this.config);
      this.componentName = dashnize(this.constructor.name);
    }

    return Component;

  })();

  LayoutBaseComponent = (function(_super) {
    __extends(LayoutBaseComponent, _super);

    function LayoutBaseComponent(config) {
      this.config = config != null ? config : {};
      LayoutBaseComponent.__super__.constructor.call(this, this.config);
      Vue.component(this.componentName, {
        template: "#" + this.componentName,
        methods: {
          addChild: function() {
            return this.$parent.items.splice(this.$index + 1, 0, {
              component: 'item-image-component'
            });
          }
        },
        data: (function(_this) {
          return function() {
            return _this.config;
          };
        })(this)
      });
      if (typeof this.init === "function") {
        this.init();
      }
    }

    return LayoutBaseComponent;

  })(Component);

  OneColLayout = (function(_super) {
    __extends(OneColLayout, _super);

    function OneColLayout() {
      return OneColLayout.__super__.constructor.apply(this, arguments);
    }

    OneColLayout.defaultConfig = {
      innerStyle: {
        'background-color': '#ff0000'
      },
      container: {
        items: [
          {
            item: 'image-item'
          }, {
            item: 'string-item'
          }
        ]
      }
    };

    OneColLayout.prototype.init = function() {};

    return OneColLayout;

  })(LayoutBaseComponent);

  TwoColLayout = (function(_super) {
    __extends(TwoColLayout, _super);

    function TwoColLayout() {
      return TwoColLayout.__super__.constructor.apply(this, arguments);
    }

    TwoColLayout.defaultConfig = {
      innerStyle: {
        'background-color': '#ff0000'
      },
      container: [
        {
          items: []
        }, {
          items: []
        }
      ]
    };

    TwoColLayout.prototype.init = function() {};

    return TwoColLayout;

  })(LayoutBaseComponent);

  ThreeColLayout = (function(_super) {
    __extends(ThreeColLayout, _super);

    function ThreeColLayout() {
      return ThreeColLayout.__super__.constructor.apply(this, arguments);
    }

    ThreeColLayout.defaultConfig = {
      innerStyle: {
        'background-color': '#ff0000'
      },
      container: [
        {
          items: []
        }, {
          items: []
        }, {
          items: []
        }
      ]
    };

    ThreeColLayout.prototype.init = function() {};

    return ThreeColLayout;

  })(LayoutBaseComponent);

  LeftLeaningLayout = (function(_super) {
    __extends(LeftLeaningLayout, _super);

    function LeftLeaningLayout() {
      return LeftLeaningLayout.__super__.constructor.apply(this, arguments);
    }

    LeftLeaningLayout.defaultConfig = {
      innerStyle: {
        'background-color': '#ff0000'
      },
      container: [
        {
          items: []
        }, {
          items: []
        }
      ]
    };

    LeftLeaningLayout.prototype.init = function() {};

    return LeftLeaningLayout;

  })(LayoutBaseComponent);

  RightLeaningLayout = (function(_super) {
    __extends(RightLeaningLayout, _super);

    function RightLeaningLayout() {
      return RightLeaningLayout.__super__.constructor.apply(this, arguments);
    }

    RightLeaningLayout.defaultConfig = {
      innerStyle: {
        'background-color': '#ff0000'
      },
      container: [
        {
          items: []
        }, {
          items: []
        }
      ]
    };

    RightLeaningLayout.prototype.init = function() {};

    return RightLeaningLayout;

  })(LayoutBaseComponent);

  SmallGridLayout = (function(_super) {
    __extends(SmallGridLayout, _super);

    function SmallGridLayout() {
      return SmallGridLayout.__super__.constructor.apply(this, arguments);
    }

    SmallGridLayout.defaultConfig = {
      innerStyle: {
        'background-color': '#ff0000'
      },
      container: {
        items: []
      }
    };

    SmallGridLayout.prototype.init = function() {};

    return SmallGridLayout;

  })(LayoutBaseComponent);

  BaseContainer = (function(_super) {
    __extends(BaseContainer, _super);

    function BaseContainer(config) {
      this.config = config != null ? config : {};
      BaseContainer.__super__.constructor.call(this, this.config);
      Vue.component(this.componentName, {
        template: "#" + this.componentName,
        methods: {
          addChild: function() {
            return this.$parent.items.splice(this.$index + 1, 0, {
              component: 'item-image-component'
            });
          }
        },
        data: (function(_this) {
          return function() {
            return _this.config;
          };
        })(this)
      });
      if (typeof this.init === "function") {
        this.init();
      }
    }

    return BaseContainer;

  })(Component);

  VerticalContainer = (function(_super) {
    __extends(VerticalContainer, _super);

    function VerticalContainer() {
      return VerticalContainer.__super__.constructor.apply(this, arguments);
    }

    VerticalContainer.prototype.init = function() {};

    return VerticalContainer;

  })(BaseContainer);

  SmallGridContainer = (function(_super) {
    __extends(SmallGridContainer, _super);

    function SmallGridContainer() {
      return SmallGridContainer.__super__.constructor.apply(this, arguments);
    }

    SmallGridContainer.prototype.init = function() {};

    return SmallGridContainer;

  })(BaseContainer);

  BaseItem = (function(_super) {
    __extends(BaseItem, _super);

    function BaseItem(config) {
      this.config = config != null ? config : {};
      BaseItem.__super__.constructor.call(this, this.config);
      this.template = "#" + this.componentName;
      this.component = {
        template: "#" + this.componentName,
        methods: {
          addChild: function() {
            return this.$parent.items.splice(this.$index + 1, 0, {
              component: 'item-image-component'
            });
          }
        },
        data: (function(_this) {
          return function() {
            return _this.config;
          };
        })(this)
      };
      if (typeof this.init === "function") {
        this.init();
      }
    }

    return BaseItem;

  })(Component);

  ImageItem = (function(_super) {
    __extends(ImageItem, _super);

    function ImageItem() {
      return ImageItem.__super__.constructor.apply(this, arguments);
    }

    ImageItem.defaultConfig = {
      src: 'https://scontent-b.xx.fbcdn.net/hphotos-xap1/v/t1.0-9/10702230_864194103591492_1872941301669900458_n.jpg?oh=cab12c388dfbace6baf9dcf11ba28193&oe=5543E106'
    };

    ImageItem.prototype.init = function() {
      return Vue.component(this.componentName, this.component);
    };

    return ImageItem;

  })(BaseItem);

  StringItem = (function(_super) {
    __extends(StringItem, _super);

    function StringItem() {
      return StringItem.__super__.constructor.apply(this, arguments);
    }

    StringItem.defaultConfig = {
      text: '<p>Hello World</p>',
      disableReturn: true,
      disableToolbar: true
    };

    StringItem.prototype.init = function() {
      this.component.directives = {
        editable: {
          bind: function() {
            new MediumEditor(this.el);
            $(this.el).html(this.vm.text);
            return $(this.el).on('input', (function(_this) {
              return function(e) {
                return _this.vm.text = $(e.target).html();
              };
            })(this));
          }
        }
      };
      return Vue.component(this.componentName, this.component);
    };

    return StringItem;

  })(BaseItem);

  TextItem = (function(_super) {
    __extends(TextItem, _super);

    function TextItem() {
      return TextItem.__super__.constructor.apply(this, arguments);
    }

    TextItem.defaultConfig = {
      model: {
        text: 'aaa',
        size: '24px',
        color: '#ff0000',
        align: 'center'
      },
      editable: {
        disableReturn: false,
        disableToolbar: false
      }
    };

    TextItem.prototype.init = function() {
      return Vue.component(this.componentName, this.component);
    };

    return TextItem;

  })(BaseItem);

}).call(this);
